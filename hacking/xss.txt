Ariana Borlak

===== COOKIES =====
a. There is one cookie named theme with a value of default.

b. The theme cookie changed its value to blue.

c. When first visiting the page, the cookie HTTP header says theme=default. When changing
	the theme, the cookie header remains theme=default until there is a GET request for
	theme=blue, and at that point the cookie header changes to theme=blue. This is the 
	same value as in the inspector.

d. The blue theme is still selected.

e. There is an HTTP cookie header of theme=value when sending a GET request to the 
	FDF server, depending on the value of the cookie.

f. The browser sends a GET request to the server to fetch theme=changedvalue and the
	server sends back the changed page depending on the new cookie value.

g. In the Inspector go to application, then cookies, and select cs338.jeffondich.com. 
	Then select the theme cookie, and right click to edit the value. Put in the value,
	hit enter, and refresh the page.

h. You can intercept and change the GET request to have the modified theme value that
	you want in the request. So instead of GET /fdf/?theme=default HTTP/1.1, you could
	have it be theme=default and the server will load the blue theme.

i. On my Windows machine, Google Chrome stores the cookies under 
	C:\Users\arian\AppData\Local\Google\Chrome\User Data\Default\Network in a
	file named Cookies.

===== CROSS-SITE SCRIPTING =====

a.  - Moriarty writes a post with Javascript that changes the text color or pops up an alert
	- A user clicks on the post
	- The JS executes the code in the script tags of the post

b. The Javascript code could steal session cookies from a user that clicks on the post.

c. The Javascript code could endlessly loop to make more posts to significantly slow
	down the server.

d. The server should not trust any user input and clean any input. The browser can also
	limit which cookies can be accessed by Javascript.